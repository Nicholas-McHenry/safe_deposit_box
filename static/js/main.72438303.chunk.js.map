{"version":3,"sources":["constants/generalConstants.js","actions/index.js","components/Numpad.js","components/Screen.js","App.js","reducers/index.js","apis/index.js","sagas/index.js","store.js","index.js"],"names":["statusValues","Object","freeze","LOCKED","UNLOCKED","statusMessages","BLANK","ERROR","READY","LOCKING","UNLOCKING","SERVICE","VALIDATING","numpadValues","ONE","TWO","THREE","FOUR","FIVE","SIX","SEVEN","EIGHT","NINE","ZERO","ASTERIX","LOCK","numpadValuesOrder","appActions","INPUT_PASSCODE","CHANGE_STATUS","CHANGE_MESSAGE","CREATE_PASSCODE","sagaActions","VALIDATE_SN","inputPasscode","passcode","type","payload","changeStatus","status","changeMessage","message","Numpad","props","handleClick","bind","checkEnteredPasscode","clearInputPasscode","lockTheSafe","validateSN","state","inputTimeout","lockingTimeout","value","this","dispatch","clearTimeout","setState","setTimeout","enteredPasscode","serialNumber","validateSerialNumber","length","map","element","index","className","onClick","getButtonList","React","Component","connect","Screen","screenTimeout","backlight","prevProps","prevState","snapshot","App","combineReducers","action","inputtedPasscode","Apis","params","fetch","then","response","json","catch","err","console","log","appSaga","call","sn","put","takeEvery","initialStore","sagaMiddleware","createSagaMiddleware","store","createStore","reducers","applyMiddleware","run","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.72438303.chunk.js","sourcesContent":["export const statusValues = Object.freeze({\r\n  LOCKED: \"Locked\",\r\n  UNLOCKED: \"Unlocked\"\r\n});\r\n\r\nexport const statusMessages = Object.freeze({\r\n  BLANK: \"\",\r\n  ERROR: \"Error\",\r\n  READY: \"Ready\",\r\n  LOCKING: \"Locking\",\r\n  UNLOCKING: \"Unlocking\",\r\n  SERVICE: \"Service\",\r\n  VALIDATING: \"Validating\"\r\n});\r\n\r\nexport const numpadValues = Object.freeze({\r\n  ONE: \"1\",\r\n  TWO: \"2\",\r\n  THREE: \"3\",\r\n  FOUR: \"4\",\r\n  FIVE: \"5\",\r\n  SIX: \"6\",\r\n  SEVEN: \"7\",\r\n  EIGHT: \"8\",\r\n  NINE: \"9\",\r\n  ZERO: \"0\",\r\n  ASTERIX: \"*\",\r\n  LOCK: \"L\"\r\n});\r\n\r\nexport const numpadValuesOrder = [\r\n  numpadValues.SEVEN,\r\n  numpadValues.EIGHT,\r\n  numpadValues.NINE,\r\n  numpadValues.FOUR,\r\n  numpadValues.FIVE,\r\n  numpadValues.SIX,\r\n  numpadValues.ONE,\r\n  numpadValues.TWO,\r\n  numpadValues.THREE,\r\n  numpadValues.ASTERIX,\r\n  numpadValues.ZERO,\r\n  numpadValues.LOCK\r\n];\r\n\r\nexport const appActions = Object.freeze({\r\n  INPUT_PASSCODE: \"INPUT_PASSCODE\",\r\n  CHANGE_STATUS: \"CHANGE_STATUS\",\r\n  CHANGE_MESSAGE: \"CHANGE_MESSAGE\",\r\n  CREATE_PASSCODE: \"CREATE_PASSCODE\"\r\n});\r\n\r\nexport const sagaActions = Object.freeze({\r\n  VALIDATE_SN: \"VALIDATE_SN\"\r\n});\r\n","import { appActions, sagaActions } from \"../constants/generalConstants\";\r\n\r\nexport const inputPasscode = passcode => {\r\n  return {\r\n    type: appActions.INPUT_PASSCODE,\r\n    payload: passcode\r\n  };\r\n};\r\n\r\nexport const changeStatus = status => {\r\n  return {\r\n    type: appActions.CHANGE_STATUS,\r\n    payload: status\r\n  };\r\n};\r\n\r\nexport const changeMessage = message => {\r\n  return {\r\n    type: appActions.CHANGE_MESSAGE,\r\n    payload: message\r\n  };\r\n};\r\n\r\nexport const createPasscode = passcode => {\r\n  return {\r\n    type: appActions.CREATE_PASSCODE,\r\n    payload: passcode\r\n  };\r\n};\r\n\r\nexport const validateSerialNumber = (passcode, serialNumber) => {\r\n  return {\r\n    type: sagaActions.VALIDATE_SN,\r\n    payload: passcode,\r\n    serialNumber\r\n  };\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  numpadValues,\r\n  statusValues,\r\n  statusMessages,\r\n  numpadValuesOrder\r\n} from \"../constants/generalConstants\";\r\nimport {\r\n  inputPasscode,\r\n  changeStatus,\r\n  changeMessage,\r\n  createPasscode,\r\n  validateSerialNumber\r\n} from \"../actions\";\r\n\r\nclass Numpad extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.checkEnteredPasscode = this.checkEnteredPasscode.bind(this);\r\n    this.clearInputPasscode = this.clearInputPasscode.bind(this);\r\n    this.lockTheSafe = this.lockTheSafe.bind(this);\r\n    this.validateSN = this.validateSN.bind(this);\r\n    this.state = {\r\n      inputTimeout: null,\r\n      lockingTimeout: null\r\n    };\r\n  }\r\n\r\n  handleClick(value) {\r\n    const { inputTimeout } = this.state;\r\n    const { dispatch, status, message } = this.props;\r\n\r\n    if (status === statusValues.LOCKED) {\r\n      if (message === statusMessages.SERVICE) {\r\n        dispatch(inputPasscode(value));\r\n        if (inputTimeout != null) {\r\n          clearTimeout(inputTimeout);\r\n        }\r\n\r\n        this.setState({\r\n          inputTimeout: setTimeout(() => {\r\n            this.validateSN();\r\n          }, 1200)\r\n        });\r\n      } else {\r\n        if (value !== numpadValues.LOCK && value !== numpadValues.ASTERIX) {\r\n          dispatch(inputPasscode(value));\r\n          if (inputTimeout != null) {\r\n            clearTimeout(inputTimeout);\r\n          }\r\n\r\n          this.setState({\r\n            inputTimeout: setTimeout(() => {\r\n              this.checkEnteredPasscode();\r\n            }, 1200)\r\n          });\r\n        } else {\r\n          this.clearInputPasscode();\r\n        }\r\n      }\r\n    } else {\r\n      if (value !== numpadValues.LOCK && value !== numpadValues.ASTERIX) {\r\n        dispatch(inputPasscode(value));\r\n      } else if (value === numpadValues.LOCK) {\r\n        this.lockTheSafe();\r\n      } else {\r\n        this.clearInputPasscode();\r\n      }\r\n    }\r\n  }\r\n\r\n  checkEnteredPasscode() {\r\n    const { dispatch, passcode, enteredPasscode } = this.props;\r\n    if (passcode === enteredPasscode) {\r\n      dispatch(changeMessage(statusMessages.UNLOCKING));\r\n      setTimeout(() => {\r\n        dispatch(changeStatus(statusValues.UNLOCKED));\r\n        dispatch(changeMessage(statusMessages.READY));\r\n        this.clearInputPasscode();\r\n      }, 3000);\r\n    } else {\r\n      this.clearInputPasscode();\r\n    }\r\n  }\r\n\r\n  clearInputPasscode() {\r\n    this.props.dispatch(inputPasscode(null));\r\n  }\r\n\r\n  validateSN() {\r\n    const { enteredPasscode, dispatch, serialNumber } = this.props;\r\n    dispatch(changeMessage(statusMessages.VALIDATING));\r\n    /* Calls saga that will fetch an API for validating serial number */\r\n    dispatch(validateSerialNumber(enteredPasscode, serialNumber));\r\n  }\r\n\r\n  lockTheSafe() {\r\n    const { enteredPasscode, dispatch } = this.props;\r\n\r\n    if (enteredPasscode != null && enteredPasscode.length >= 6) {\r\n      dispatch(changeMessage(statusMessages.LOCKING));\r\n      setTimeout(() => {\r\n        dispatch(createPasscode(enteredPasscode));\r\n        dispatch(inputPasscode(null));\r\n        dispatch(changeStatus(statusValues.LOCKED));\r\n        dispatch(changeMessage(statusMessages.READY));\r\n      }, 3000);\r\n    }\r\n  }\r\n\r\n  getButtonList() {\r\n    return numpadValuesOrder.map((element, index) => {\r\n      return (\r\n        <button\r\n          key={index}\r\n          className=\"btn\"\r\n          onClick={() => this.handleClick(element)}\r\n        >\r\n          {element}\r\n        </button>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"sdb-numpad\">{this.getButtonList()}</div>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    status: state.status,\r\n    passcode: state.passcode,\r\n    enteredPasscode: state.inputPasscode,\r\n    message: state.message,\r\n    serialNumber: state.serialNumber\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Numpad);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeMessage, inputPasscode } from \"../actions\";\r\nimport { statusMessages } from \"../constants/generalConstants\";\r\n\r\nclass Screen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      screenTimeout: null,\r\n      backlight: \"off\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      screenTimeout: setTimeout(() => {\r\n        this.setState({\r\n          backlight: \"off\"\r\n        });\r\n      }, 5000)\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.enteredPasscode !== this.props.enteredPasscode) {\r\n      const { dispatch } = this.props;\r\n      clearTimeout(this.state.screenTimeout);\r\n\r\n      this.setState({\r\n        backlight: \"on\",\r\n        screenTimeout: setTimeout(() => {\r\n          this.setState({\r\n            backlight: \"off\"\r\n          });\r\n        }, 5000)\r\n      });\r\n\r\n      if (this.props.enteredPasscode === \"000000\") {\r\n        setTimeout(() => {\r\n          dispatch(inputPasscode(null));\r\n          dispatch(changeMessage(statusMessages.SERVICE));\r\n        }, 1200);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { status, message } = this.props;\r\n    const { backlight } = this.state;\r\n\r\n    return (\r\n      <div className={`sdb-screen backlight-${backlight}`}>\r\n        <div className=\"sdb-status\">{status}</div>\r\n        <div className=\"sdb-status-messages\">{message}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    status: state.status,\r\n    message: state.message,\r\n    enteredPasscode: state.inputPasscode\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Screen);\r\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"./App.scss\";\nimport Numpad from \"./components/Numpad\";\nimport Screen from \"./components/Screen\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"sdb-container\">\n          <div className=\"sdb-body\">\n            <Screen />\n            <Numpad />\n            <div className=\"sn\">S/N: {this.props.serialNumber}</div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    serialNumber: state.serialNumber\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","import { combineReducers } from \"redux\";\r\nimport { appActions } from \"../constants/generalConstants\";\r\n\r\nconst serialNumberReducer = (serialNumber = null, action) => {\r\n  return serialNumber;\r\n};\r\n\r\nconst statusReducer = (status = null, action) => {\r\n  if (action.type === appActions.CHANGE_STATUS) {\r\n    return action.payload;\r\n  }\r\n  return status;\r\n};\r\n\r\nconst passcodeReducer = (passcode = null, action) => {\r\n  if (action.type === appActions.CREATE_PASSCODE) {\r\n    return action.payload;\r\n  }\r\n  return passcode;\r\n};\r\n\r\nconst inputPasscodeReducer = (inputtedPasscode = null, action) => {\r\n  if (action.type === appActions.INPUT_PASSCODE) {\r\n    if (inputtedPasscode != null) {\r\n      if (action.payload != null) {\r\n        return inputtedPasscode + action.payload;\r\n      } else {\r\n        return null;\r\n      }\r\n    } else {\r\n      return action.payload;\r\n    }\r\n  }\r\n\r\n  return inputtedPasscode;\r\n};\r\n\r\nconst messageReducer = (message = null, action) => {\r\n  if (action.type === appActions.CHANGE_MESSAGE) {\r\n    return action.payload;\r\n  }\r\n  return message;\r\n};\r\n\r\nexport default combineReducers({\r\n  status: statusReducer,\r\n  message: messageReducer,\r\n  serialNumber: serialNumberReducer,\r\n  passcode: passcodeReducer,\r\n  inputPasscode: inputPasscodeReducer\r\n});\r\n","import fetch from \"cross-fetch\";\r\n\r\nclass Apis {\r\n  static validateSerialNumber(params) {\r\n    let request = fetch(\r\n      \"https://9w4qucosgf.execute-api.eu-central-1.amazonaws.com/default/CR-JS_team_M02a?code=\" +\r\n        params\r\n    )\r\n      .then(response => {\r\n        return response.json();\r\n      })\r\n      .catch(err => {\r\n        console.log(\"There was an error in fetching:\", err);\r\n      });\r\n    return request;\r\n  }\r\n}\r\n\r\nexport default Apis;\r\n","import { call, put, takeEvery } from \"redux-saga/effects\";\r\nimport Apis from \"../apis\";\r\nimport {\r\n  sagaActions,\r\n  statusMessages,\r\n  statusValues\r\n} from \"../constants/generalConstants\";\r\nimport { changeMessage, changeStatus } from \"../actions\";\r\n\r\nfunction* validateSerialNumber(action) {\r\n  try {\r\n    const response = yield call(Apis.validateSerialNumber, action.payload);\r\n\r\n    if (response.sn === action.serialNumber) {\r\n      yield put(changeStatus(statusValues.UNLOCKED));\r\n    }\r\n    yield put(changeMessage(statusMessages.READY));\r\n  } catch (e) {\r\n    console.log(\"There was an error while fetching the data:\", e);\r\n  }\r\n}\r\n\r\nfunction* appSaga() {\r\n  yield takeEvery(sagaActions.VALIDATE_SN, validateSerialNumber);\r\n}\r\n\r\nexport default appSaga;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport reducers from \"./reducers\";\r\nimport { statusValues, statusMessages } from \"./constants/generalConstants\";\r\nimport appSaga from \"./sagas\";\r\n\r\n/* Create initial store object */\r\nconst initialStore = {\r\n  status: statusValues.UNLOCKED,\r\n  message: statusMessages.READY,\r\n  serialNumber: \"4815162342\",\r\n  passcode: null,\r\n  inputPasscode: null\r\n};\r\n\r\n/* Create saga middleware */\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\n/* Create store */\r\nconst store = createStore(\r\n  reducers,\r\n  initialStore,\r\n  applyMiddleware(sagaMiddleware)\r\n);\r\n\r\n/* Run the saga */\r\nsagaMiddleware.run(appSaga);\r\n\r\nexport { store };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.scss\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n"],"sourceRoot":""}